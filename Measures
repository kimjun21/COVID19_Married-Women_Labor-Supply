///* 가구용 *///

1. 사용할 변수만 남기기

keep h12_id h12_reg7 h12_din h1201_1 h12_pid1 h1201_2 h1201_3 h1201_4 h1201_5 h1201_6 h1201_7 h1201_11 h1201_13 h12_pid2 h1201_14 h1201_15 h1201_16 h1201_17 h1201_18 h1201_19 h1201_23 h1201_25 h12_pid3 h1201_26 h1201_27 h1201_28 h1201_29 h1201_30 h1201_31 h1201_35 h1201_37 h12_pid4 h1201_38 h1201_39 h1201_40 h1201_41 h1201_42 h1201_43 h1201_47 h1201_49 h12_pid5 h1201_50 h1201_51 h1201_52 h1201_53 h1201_54 h1201_55 h1201_59 h1201_61 h12_pid6 h1201_62 h1201_63 h1201_64 h1201_65 h1201_66 h1201_67 h1201_71 h1201_73 h12_pid7 h1201_74 h1201_75 h1201_76 h1201_77 h1201_78 h1201_79 h1201_83 h1201_85 h12_pid8 h1201_86 h1201_87 h1201_88 h1201_89 h1201_90 h1201_91 h1201_95 h1201_97 h12_pid9 h1201_98 h1201_99 h1201_100 h1201_101 h1201_102 h1201_103 h1201_107 h1201_109 h1203_4 h1203_7aq1 h1203_7 h1203_8 h1203_9 h1203_14 h1203_7aq2 h1203_17 h1203_18 h1203_19 h1203_24 h1203_7aq3 h1203_27 h1203_28 h1203_29 h1203_34 h1203_7aq4 h1203_37 h1203_38 h1203_39 h1203_44 h1203_7aq5 h1203_47 h1203_48 h1203_49 h1203_54 h1203_7aq6 h1203_57 h1203_58 h1203_59 h1203_64 h1203_7aq7 h1203_67 h1203_68 h1203_69 h1203_74 h1203_7aq8 h1203_77 h1203_78 h1203_79 h1203_84 h1203_7aq9 h1203_87 h1203_88 h1203_89 h1201_110

2. stack 준비용

forvalues i=1/9 {
gen 가구ID`i'=h12_id
}
forvalues i=1/9 {
gen 지역`i'= h12_reg7
}
forvalues i=1/9 {
gen 가구원수`i'=h1201_1
}
forvalues i=1/9 {
gen 가구형태`i'= h1201_110 
}
forvalues i=1/9 {
gen 가처분소득`i'=h12_din
}

3. 정렬

order 가구ID1 지역1 가구원수1 가구형태1 가처분소득1  h12_pid1 h1201_2 h1201_3 h1201_4 h1201_5 h1201_6 h1201_7 h1201_11 h1201_13  h1203_4 h1203_7aq1 h1203_7 h1203_8 h1203_9 가구ID2 지역2 가구원수2 가구형태2 가처분소득2 h12_pid2 h1201_14 h1201_15 h1201_16 h1201_17 h1201_18 h1201_19 h1201_23 h1201_25  h1203_14 h1203_7aq2 h1203_17 h1203_18 h1203_19 가구ID3 지역3 가구원수3 가구형태3 가처분소득3  h12_pid3 h1201_26 h1201_27 h1201_28 h1201_29 h1201_30 h1201_31 h1201_35 h1201_37  h1203_24 h1203_7aq3 h1203_27 h1203_28 h1203_29 가구ID4 지역4 가구원수4 가구형태4 가처분소득4  h12_pid4 h1201_38 h1201_39 h1201_40 h1201_41 h1201_42 h1201_43 h1201_47 h1201_49  h1203_34 h1203_7aq4 h1203_37 h1203_38 h1203_39 가구ID5 지역5 가구원수5 가구형태5 가처분소득5  h12_pid5 h1201_50 h1201_51 h1201_52 h1201_53 h1201_54 h1201_55 h1201_59 h1201_61  h1203_44 h1203_7aq5 h1203_47 h1203_48 h1203_49 가구ID6 지역6 가구원수6 가구형태6 가처분소득6 h12_pid6 h1201_62 h1201_63 h1201_64 h1201_65 h1201_66 h1201_67 h1201_71 h1201_73  h1203_54 h1203_7aq6 h1203_57 h1203_58 h1203_59 가구ID7 지역7 가구원수7 가구형태7 가처분소득7  h12_pid7 h1201_74 h1201_75 h1201_76 h1201_77 h1201_78 h1201_79 h1201_83 h1201_85  h1203_64 h1203_7aq7 h1203_67 h1203_68 h1203_69 가구ID8 지역8 가구원수8 가구형태8 가처분소득8  h12_pid8 h1201_86 h1201_87 h1201_88 h1201_89 h1201_90 h1201_91 h1201_95 h1201_97  h1203_74 h1203_7aq8 h1203_77 h1203_78 h1203_79 가구ID9 지역9 가구원수9 가구형태9 가처분소득9  h12_pid9 h1201_98 h1201_99 h1201_100 h1201_101 h1201_102 h1201_103 h1201_107 h1201_109  h1203_84 h1203_7aq9 h1203_87 h1203_88 h1203_89

4. stack 방해 변수들 제거

drop h12_id h12_reg7 h12_din h1201_1 h1201_110

5. stack

stack 가구ID1-h1203_89, group(9)

drop _stack

sort h1201_5 
* 결측치 삭제 by 태어난 연도

=> "2016_가구용"으로 저장 



///* 개인용 *///

1. 사용할 변수 남기기

keep h12_pid p1202_6 p1202_8 p1202_4aq1
rename h12_pid h12_pid1

=> "2016_개인용"으로 저장 

2. 개인ID로 머지

merge m:m h12_pid1 using 2016_가구용.dta
drop _merge 

=> "2016_최종본"으로 저장 



///* 최종본 *///

* label & rename

label variable h12_pid1 "개인id (h12_pid)"
rename h12_pid1 개인id

label variable p1202_6 "일한개월수 (p1202_6)"
rename p1202_6 일한개월수

label variable p1202_8 "주당근로시간 (p1202_8)"
rename p1202_8 주당근로시간

label variable p1202_4aq1 "노조가입여부 (p1202_4aq1)"
rename p1202_4aq1 노조가입여부

label variable 가구ID1 "가구id (h12_id)"
rename 가구ID1 가구id

label variable 지역1 "지역 (h12_reg7)"
rename 지역1 지역

label variable 가구원수1 "가구원수 (h1201_1)"
rename 가구원수1 가구원수

label variable 가구형태1 "가구형태 (h1201_110)"
rename 가구형태1 가구형태

label variable 가처분소득1 "가처분소득 (h12_din)"
rename 가처분소득1 가처분소득

label variable h1201_2 "가구원번호 (h1201_2)"
rename h1201_2 가구원번호

label variable h1201_3 "가구주와관계 (h1201_3)"
rename h1201_3 가구주와관계

label variable h1201_4 "성별 (h1201_4)"
rename h1201_4 성별

label variable h1201_5 "태어난연도 (h1201_5)"
rename h1201_5 태어난연도

label variable h1201_6 "교육수준1 (h1201_6)"
rename h1201_6 교육수준1

label variable h1201_7 "교육수준2 (h1201_7)"
rename h1201_7 교육수준2

label variable h1201_11 "혼인상태 (h1201_11)"
rename h1201_11 혼인상태

label variable h1201_13 "동거여부 (h1201_13)"
rename h1201_13 동거여부

label variable h1203_4 "주된경제활동 (h1203_4)"
rename h1203_4 주된경제활동

label variable h1203_7aq1 "경제활동1231 (h1203_7aq1)"
rename h1203_7aq1 경제활동1231

label variable h1203_7 "업종 (h1203_7)"
rename h1203_7 업종

label variable h1203_8 "직종 (h1203_8)"
rename h1203_8 직종

label variable h1203_9 "사업장규모 (h1203_9)"
rename h1203_9 사업장규모

**# 주요 변수정리 #1

* 종속변수
gen 종속변수 = (일한개월수*4.4*주당근로시간)/52.1
tab 종속변수, m

tab 일한개월수, m
recode 일한개월수 (99=.)
tab 일한개월수, m
* 결측치: 99

tab 주당근로시간, m
recode 주당근로시간 (999=.)
tab 주당근로시간, m
* 결측치: 999

* 연령
gen 연령 = 20**-태어난연도
tab 연령, m

tab 태어난연도, m
recode 태어난연도 (9999=.)
tab 태어난연도, m
* 결측치: 9999

* 연령제곱
gen 연령제곱 = 연령^2
tab 연령제곱, m

* 교육수준
gen 교육수준 = .
* 고졸 이하: 무학~고등학교
replace 교육수준 = 0 if inlist(교육수준1, 2,3,4,5)
* 전문대 졸업 또는 수료
replace 교육수준 = 1 if 교육수준1 == 6 & inlist(교육수준2, 4, 5)
* 전문대 재학, 휴학, 비해당 → 고졸 이하
replace 교육수준 = 0 if 교육수준1 == 6 & inlist(교육수준2, 1,2,3)
* 대학교 졸업 또는 수료
replace 교육수준 = 2 if 교육수준1 == 7 & inlist(교육수준2, 4, 5)
* 대학교 재학, 휴학, 비해당 → 전문대졸로 간주
replace 교육수준 = 1 if 교육수준1 == 7 & inlist(교육수준2, 1,2,3)
* 대학원(석사/박사) 졸업 또는 수료
replace 교육수준 = 3 if inlist(교육수준1, 8,9) & inlist(교육수준2, 4, 5)
* 대학원 재학, 휴학, 비해당 → 대졸로 간주
replace 교육수준 = 2 if inlist(교육수준1, 8,9) & inlist(교육수준2, 1,2,3)
tab 교육수준, m

* 사업체규모
tab 사업장규모, m
recode 사업장규모 (1/7=0) (8/10=1) (11=.), gen (사업체규모)
tab 사업체규모, m
* 결측치: 11

* 로그가처분소득
tab 가처분소득, m
gen 로그가처분소득 = ln(가처분소득)
sort 가처분소득
tab 로그가처분소득, m
** 음(-)의 값은 결측치로, 단위 확인필요

* 업종
tab 업종, m
recode 업종 (999=.) (1/3=1) (5/34=2) (35/39=3) (41/42=4) (45/69=5) (70/96=6) (97/99=7), gen(업종_더미) 
tab 업종_더미
tab 업종_더미,m
* 결측치: 999

* 직종
tab 직종 , m
recode 직종 (9999=.) (100/199=1) (200/399=2) (400/499=3) (500/699=4) (700/899=5) (900/999=6) (1000/1999=7), gen(직종_더미)
tab 직종_더미
tab 직종_더미,m
* 결측치: 9999

* 지역
tab 지역, m

* year 
gen year = 2016, 2017, 2018, 2019, 2020
gen period = 0  // 2016=0, 2017=1, 2018=2, 2019=3, 2020=4로 코딩
gen covid = 0  // 2016~2019년에는 0으로 코딩, 2020년에는 1로 코딩


**# 그외 변수정리 #2

** 가족만 **
* 1. 핵심 변수 생성
gen is_father = (가구주와관계 == 10 & 성별 == 1)
gen is_mother = (가구주와관계 == 20 & 성별 == 2)
gen iis_child  = inrange(가구주와관계, 11, 19)  // 첫째~아홉째 자녀

* 2. 구성원 수 계산
egen num_father = total(is_father), by(가구id)
egen num_mother = total(is_mother), by(가구id)
egen num_child  = total(iis_child),  by(가구id)
egen num_total  = count(가구주와관계),   by(가구id)

* 3. 핵가족 조건 정의
gen nuclear_family = (num_father == 1 & num_mother == 1 & ///
                      num_total == num_father + num_mother + num_child & ///
                      num_child >= 1)

** 자녀유무 **
* 1. 연령이 18세 이하인 경우 자녀로 표시
gen is_child = (연령 <= 18)
* 2. 가구id 기준으로, 해당 가구에 is_child==1인 사람이 하나라도 있으면 1
egen 자녀유무 = max(is_child), by(가구id)

** 자녀연령 **
* 1. 연령이 6세 이하인 경우 자녀로 표시
gen is_under6 = (연령 <= 6)
* 2. 가구id 기준으로, 해당 가구에 is_under6==1인 사람이 하나라도 있으면 1
egen 자녀연령 = max(is_under6), by(가구id)

** 상호작용항 **
gen covid_자녀연령 = covid*자녀연령
gen period_자녀연령 = period*자녀연령


**# 처치집단 VS 비교집단 #3

* 동성모형 _ 미취학 자녀가 있는 기혼 여성 (처치집단) VS 미취학 자녀가 없는 기혼 여성 (비교집단) 
** 가계도 - 아버지, 어머니, 아이들로 구성됨
** 처치집단에는 가구에 미취학 자녀(6세 이하)가 있는 집단
** 비교집단에는 가구에 미취학 자녀가 없고 7세 이상 18세 이하의 자녀가 있는 집단

keep if nuclear_family == 1
keep if 연령 >= 25 & 연령 <= 54 
keep if 자녀유무==1
keep if 혼인상태==1
keep if 가구형태==5
keep if 가구주와관계==10 | 가구주와관계==20
